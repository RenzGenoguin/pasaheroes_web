// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Gender {
    Male
    Female
}

model Admin {
    id        Int      @id @default(autoincrement())
    name      String
    password  String
    username  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model VehicleType {
    id          Int      @id @default(autoincrement())
    vehicleType String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    Driver      Driver[]
}

model Driver {
    id            String      @id @default(cuid())
    profileUrl    String
    firstName     String
    lastName      String
    fullName      String
    plateNo       String
    licenceNo       String
    gender       Gender
    contactNo     String
    address       String
    vehicleTypeId Int
    vehicleType   VehicleType @relation(fields: [vehicleTypeId], references: [id])
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    Rating        Rating[]
    Comment       Comment[]
    Ride          Ride[]
}

model Pasahero {
    id         Int       @id @default(autoincrement())
    profileUrl String?
    firstName  String
    lastName   String
    gender       Gender
    emergencyContact String
    contactNo  String?
    address    String
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    Rating     Rating[]
    Comment    Comment[]
    Ride       Ride[]
}

model Rating {
    id         Int      @id @default(autoincrement())
    rating     Float
    driverId   String
    pasaheroId Int
    rideId     Int
    Driver     Driver   @relation(fields: [driverId], references: [id])
    Pasahero   Pasahero @relation(fields: [pasaheroId], references: [id])
    Ride       Ride?
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model Comment {
    id         Int      @id @default(autoincrement())
    comment    String
    driverId   String
    pasaheroId Int
    rideId     Int
    Driver     Driver   @relation(fields: [driverId], references: [id])
    Pasahero   Pasahero @relation(fields: [pasaheroId], references: [id])
    Ride       Ride?
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model Ride {
    id         Int       @id @default(autoincrement())
    startRide  DateTime
    endRide    DateTime?
    driverId   String
    pasaheroId Int
    ratingId   Int?      @unique
    commentId  Int?      @unique
    Driver     Driver    @relation(fields: [driverId], references: [id])
    Pasahero   Pasahero  @relation(fields: [pasaheroId], references: [id])
    Rating     Rating?   @relation(fields: [ratingId], references: [id])
    Comment    Comment?  @relation(fields: [commentId], references: [id])
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
}
